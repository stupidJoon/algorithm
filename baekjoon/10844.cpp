#include <iostream>

using namespace std;

long long dp[100][10] = { { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 } };

int main() {
  int n;
  cin >> n;
  if (n == 1) {
    cout << 9;
    return 0;
  }
  for (int i = 1; i < n; i++) {
    dp[i][0] = dp[i - 1][1] % 1000000000;
    dp[i][1] = (dp[i - 1][0] % 1000000000 + dp[i - 1][2] % 1000000000) % 1000000000;
    dp[i][2] = (dp[i - 1][1] % 1000000000 + dp[i - 1][3] % 1000000000) % 1000000000;
    dp[i][3] = (dp[i - 1][2] % 1000000000 + dp[i - 1][4] % 1000000000) % 1000000000;
    dp[i][4] = (dp[i - 1][3] % 1000000000 + dp[i - 1][5] % 1000000000) % 1000000000;
    dp[i][5] = (dp[i - 1][4] % 1000000000 + dp[i - 1][6] % 1000000000) % 1000000000;
    dp[i][6] = (dp[i - 1][5] % 1000000000 + dp[i - 1][7] % 1000000000) % 1000000000;
    dp[i][7] = (dp[i - 1][6] % 1000000000 + dp[i - 1][8] % 1000000000) % 1000000000;
    dp[i][8] = (dp[i - 1][7] % 1000000000 + dp[i - 1][9] % 1000000000) % 1000000000;
    dp[i][9] = dp[i - 1][8] % 1000000000;
  }
  long long sum = 0;
  for (long long i: dp[n - 1]) sum += i % 1000000000;
  cout << sum % 1000000000;
}